// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@hey-api/client-axios';
import type { AccountsListData, AccountsListResponse, AccountsMeRetrieveData, AccountsMeRetrieveResponse, AccountsMeBillingRetrieveData, AccountsMeBillingRetrieveResponse, AccountsMeBillingInvoicesRetrieveData, AccountsMeBillingInvoicesRetrieveResponse, AccountsMeBillingUsageRetrieveData, AccountsMeBillingUsageRetrieveResponse, AccountsMeBillingSubscriptionRetrieveData, AccountsMeTtsApiKeysRetrieveData, AccountsMeTtsApiKeysRetrieveResponse, AccountsMeTtsApiKeysPartialUpdateData, AccountsMeTtsApiKeysPartialUpdateResponse, AccountsMeUsageCallsRetrieveData, AccountsMeUsageCallsRetrieveResponse, AgentsListData, AgentsListResponse, AgentsCreateData, AgentsCreateResponse, AgentsDestroyData, AgentsDestroyResponse, AgentsRetrieveData, AgentsRetrieveResponse, AgentsPartialUpdateData, AgentsPartialUpdateResponse, AgentsCallsListData, AgentsCallsListResponse, AgentsCallsCreateData, AgentsCallsCreateResponse, ApiKeysListData, ApiKeysListResponse, ApiKeysCreateData, ApiKeysCreateResponse, ApiKeysDestroyData, ApiKeysDestroyResponse, ApiKeysRetrieveData, ApiKeysRetrieveResponse, ApiKeysPartialUpdateData, ApiKeysPartialUpdateResponse, ApiKeysUpdateData, ApiKeysUpdateResponse, CallsListData, CallsListResponse, CallsCreateData, CallsCreateResponse, CallsDestroyData, CallsDestroyResponse, CallsRetrieveData, CallsRetrieveResponse, CallsMessagesListData, CallsMessagesListResponse, CallsRecordingRetrieveData, CallsRecordingRetrieveResponse, CallsStagesListData, CallsStagesListResponse, CallsStagesRetrieveData, CallsStagesRetrieveResponse, CallsStagesMessagesListData, CallsStagesMessagesListResponse, CallsStagesMessagesAudioRetrieveData, CallsStagesToolsListData, CallsStagesToolsListResponse, CallsToolsListData, CallsToolsListResponse, CorporaListData, CorporaListResponse, CorporaCreateData, CorporaCreateResponse, CorporaDestroyData, CorporaDestroyResponse, CorporaRetrieveData, CorporaRetrieveResponse, CorporaPartialUpdateData, CorporaPartialUpdateResponse, CorporaUpdateData, CorporaUpdateResponse, CorporaQueryData, CorporaQueryResponse, CorporaSourcesListData, CorporaSourcesListResponse, CorporaSourcesCreateData, CorporaSourcesCreateResponse, CorporaSourcesDestroyData, CorporaSourcesDestroyResponse, CorporaSourcesRetrieveData, CorporaSourcesRetrieveResponse, CorporaSourcesPartialUpdateData, CorporaSourcesPartialUpdateResponse, CorporaSourcesUpdateData, CorporaSourcesUpdateResponse, CorporaSourcesDocumentsListData, CorporaSourcesDocumentsListResponse, CorporaSourcesDocumentsRetrieveData, CorporaSourcesDocumentsRetrieveResponse, CorporaUploadsCreateData, CorporaUploadsCreateResponse, DeletedCallsListData, DeletedCallsListResponse, DeletedCallsRetrieveData, DeletedCallsRetrieveResponse, ModelsListData, ModelsListResponse, SchemaRetrieveData, SchemaRetrieveResponse, ToolsListData, ToolsListResponse, ToolsCreateData, ToolsCreateResponse, ToolsDestroyData, ToolsDestroyResponse, ToolsRetrieveData, ToolsRetrieveResponse, ToolsUpdateData, ToolsUpdateResponse, ToolsHistoryListData, ToolsHistoryListResponse, ToolsTestCreateData, VoicesListData, VoicesListResponse, VoicesCreateData, VoicesCreateResponse, VoicesDestroyData, VoicesDestroyResponse, VoicesRetrieveData, VoicesRetrieveResponse, WebhooksListData, WebhooksListResponse, WebhooksCreateData, WebhooksCreateResponse, WebhooksDestroyData, WebhooksDestroyResponse, WebhooksRetrieveData, WebhooksRetrieveResponse, WebhooksPartialUpdateData, WebhooksPartialUpdateResponse, WebhooksUpdateData, WebhooksUpdateResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class AccountsService {
    public static accountsList<ThrowOnError extends boolean = false>(options?: Options<AccountsListData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<AccountsListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/accounts',
            ...options
        });
    }
    
    public static accountsMeRetrieve<ThrowOnError extends boolean = false>(options?: Options<AccountsMeRetrieveData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<AccountsMeRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/accounts/me',
            ...options
        });
    }
    
    /**
     * Gets high-level billing information for the current account.
     */
    public static accountsMeBillingRetrieve<ThrowOnError extends boolean = false>(options?: Options<AccountsMeBillingRetrieveData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<AccountsMeBillingRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/accounts/me/billing',
            ...options
        });
    }
    
    /**
     * Lists invoices for the current account.
     */
    public static accountsMeBillingInvoicesRetrieve<ThrowOnError extends boolean = false>(options?: Options<AccountsMeBillingInvoicesRetrieveData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<AccountsMeBillingInvoicesRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/accounts/me/billing/invoices',
            ...options
        });
    }
    
    /**
     * Gets usage information for the current account in the given period.
     */
    public static accountsMeBillingUsageRetrieve<ThrowOnError extends boolean = false>(options?: Options<AccountsMeBillingUsageRetrieveData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<AccountsMeBillingUsageRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/accounts/me/billing/usage',
            ...options
        });
    }
    
    /**
     * Redirects to the billing portal for the current account.
     */
    public static accountsMeBillingSubscriptionRetrieve<ThrowOnError extends boolean = false>(options?: Options<AccountsMeBillingSubscriptionRetrieveData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/accounts/me/billing_subscription',
            ...options
        });
    }
    
    public static accountsMeTtsApiKeysRetrieve<ThrowOnError extends boolean = false>(options?: Options<AccountsMeTtsApiKeysRetrieveData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<AccountsMeTtsApiKeysRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/accounts/me/tts_api_keys',
            ...options
        });
    }
    
    public static accountsMeTtsApiKeysPartialUpdate<ThrowOnError extends boolean = false>(options?: Options<AccountsMeTtsApiKeysPartialUpdateData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).patch<AccountsMeTtsApiKeysPartialUpdateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/accounts/me/tts_api_keys',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    /**
     * Gets aggregated call usage.
     */
    public static accountsMeUsageCallsRetrieve<ThrowOnError extends boolean = false>(options?: Options<AccountsMeUsageCallsRetrieveData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<AccountsMeUsageCallsRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/accounts/me/usage/calls',
            ...options
        });
    }
    
}

export class AgentsService {
    public static agentsList<ThrowOnError extends boolean = false>(options?: Options<AgentsListData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<AgentsListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/agents',
            ...options
        });
    }
    
    public static agentsCreate<ThrowOnError extends boolean = false>(options?: Options<AgentsCreateData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<AgentsCreateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/agents',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static agentsDestroy<ThrowOnError extends boolean = false>(options: Options<AgentsDestroyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<AgentsDestroyResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/agents/{agent_id}',
            ...options
        });
    }
    
    public static agentsRetrieve<ThrowOnError extends boolean = false>(options: Options<AgentsRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<AgentsRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/agents/{agent_id}',
            ...options
        });
    }
    
    public static agentsPartialUpdate<ThrowOnError extends boolean = false>(options: Options<AgentsPartialUpdateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<AgentsPartialUpdateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/agents/{agent_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static agentsCallsList<ThrowOnError extends boolean = false>(options: Options<AgentsCallsListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<AgentsCallsListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/agents/{agent_id}/calls',
            ...options
        });
    }
    
    public static agentsCallsCreate<ThrowOnError extends boolean = false>(options: Options<AgentsCallsCreateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<AgentsCallsCreateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/agents/{agent_id}/calls',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class ApiKeysService {
    /**
     * Gets the current user's API keys.
     */
    public static apiKeysList<ThrowOnError extends boolean = false>(options?: Options<ApiKeysListData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ApiKeysListResponse, unknown, ThrowOnError>({
            url: '/api/api_keys',
            ...options
        });
    }
    
    /**
     * Creates a new API key.
     */
    public static apiKeysCreate<ThrowOnError extends boolean = false>(options: Options<ApiKeysCreateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<ApiKeysCreateResponse, unknown, ThrowOnError>({
            url: '/api/api_keys',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    /**
     * Deletes an API key.
     */
    public static apiKeysDestroy<ThrowOnError extends boolean = false>(options: Options<ApiKeysDestroyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<ApiKeysDestroyResponse, unknown, ThrowOnError>({
            url: '/api/api_keys/{api_key_prefix}',
            ...options
        });
    }
    
    /**
     * Gets an API key.
     */
    public static apiKeysRetrieve<ThrowOnError extends boolean = false>(options: Options<ApiKeysRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<ApiKeysRetrieveResponse, unknown, ThrowOnError>({
            url: '/api/api_keys/{api_key_prefix}',
            ...options
        });
    }
    
    /**
     * Updates an API key.
     */
    public static apiKeysPartialUpdate<ThrowOnError extends boolean = false>(options: Options<ApiKeysPartialUpdateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<ApiKeysPartialUpdateResponse, unknown, ThrowOnError>({
            url: '/api/api_keys/{api_key_prefix}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    /**
     * Updates an API key.
     */
    public static apiKeysUpdate<ThrowOnError extends boolean = false>(options: Options<ApiKeysUpdateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<ApiKeysUpdateResponse, unknown, ThrowOnError>({
            url: '/api/api_keys/{api_key_prefix}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class CallsService {
    public static callsList<ThrowOnError extends boolean = false>(options?: Options<CallsListData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<CallsListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls',
            ...options
        });
    }
    
    public static callsCreate<ThrowOnError extends boolean = false>(options?: Options<CallsCreateData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<CallsCreateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static callsDestroy<ThrowOnError extends boolean = false>(options: Options<CallsDestroyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<CallsDestroyResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls/{call_id}',
            ...options
        });
    }
    
    public static callsRetrieve<ThrowOnError extends boolean = false>(options: Options<CallsRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CallsRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls/{call_id}',
            ...options
        });
    }
    
    public static callsMessagesList<ThrowOnError extends boolean = false>(options: Options<CallsMessagesListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CallsMessagesListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls/{call_id}/messages',
            ...options
        });
    }
    
    /**
     * Returns or redirects to a recording of the call.
     */
    public static callsRecordingRetrieve<ThrowOnError extends boolean = false>(options: Options<CallsRecordingRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CallsRecordingRetrieveResponse, unknown, ThrowOnError>({
            responseType: 'blob',
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls/{call_id}/recording',
            ...options
        });
    }
    
    public static callsStagesList<ThrowOnError extends boolean = false>(options: Options<CallsStagesListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CallsStagesListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls/{call_id}/stages',
            ...options
        });
    }
    
    public static callsStagesRetrieve<ThrowOnError extends boolean = false>(options: Options<CallsStagesRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CallsStagesRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls/{call_id}/stages/{call_stage_id}',
            ...options
        });
    }
    
    public static callsStagesMessagesList<ThrowOnError extends boolean = false>(options: Options<CallsStagesMessagesListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CallsStagesMessagesListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls/{call_id}/stages/{call_stage_id}/messages',
            ...options
        });
    }
    
    public static callsStagesMessagesAudioRetrieve<ThrowOnError extends boolean = false>(options: Options<CallsStagesMessagesAudioRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls/{call_id}/stages/{call_stage_id}/messages/{call_stage_message_index}/audio',
            ...options
        });
    }
    
    public static callsStagesToolsList<ThrowOnError extends boolean = false>(options: Options<CallsStagesToolsListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CallsStagesToolsListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls/{call_id}/stages/{call_stage_id}/tools',
            ...options
        });
    }
    
    public static callsToolsList<ThrowOnError extends boolean = false>(options: Options<CallsToolsListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CallsToolsListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/calls/{call_id}/tools',
            ...options
        });
    }
    
}

export class CorporaService {
    public static corporaList<ThrowOnError extends boolean = false>(options?: Options<CorporaListData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<CorporaListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora',
            ...options
        });
    }
    
    public static corporaCreate<ThrowOnError extends boolean = false>(options: Options<CorporaCreateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CorporaCreateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static corporaDestroy<ThrowOnError extends boolean = false>(options: Options<CorporaDestroyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<CorporaDestroyResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}',
            ...options
        });
    }
    
    public static corporaRetrieve<ThrowOnError extends boolean = false>(options: Options<CorporaRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CorporaRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}',
            ...options
        });
    }
    
    public static corporaPartialUpdate<ThrowOnError extends boolean = false>(options: Options<CorporaPartialUpdateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<CorporaPartialUpdateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static corporaUpdate<ThrowOnError extends boolean = false>(options: Options<CorporaUpdateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<CorporaUpdateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static corporaQuery<ThrowOnError extends boolean = false>(options: Options<CorporaQueryData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CorporaQueryResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}/query',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static corporaSourcesList<ThrowOnError extends boolean = false>(options: Options<CorporaSourcesListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CorporaSourcesListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}/sources',
            ...options
        });
    }
    
    public static corporaSourcesCreate<ThrowOnError extends boolean = false>(options: Options<CorporaSourcesCreateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CorporaSourcesCreateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}/sources',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static corporaSourcesDestroy<ThrowOnError extends boolean = false>(options: Options<CorporaSourcesDestroyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<CorporaSourcesDestroyResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}/sources/{source_id}',
            ...options
        });
    }
    
    public static corporaSourcesRetrieve<ThrowOnError extends boolean = false>(options: Options<CorporaSourcesRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CorporaSourcesRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}/sources/{source_id}',
            ...options
        });
    }
    
    public static corporaSourcesPartialUpdate<ThrowOnError extends boolean = false>(options: Options<CorporaSourcesPartialUpdateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<CorporaSourcesPartialUpdateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}/sources/{source_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static corporaSourcesUpdate<ThrowOnError extends boolean = false>(options: Options<CorporaSourcesUpdateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<CorporaSourcesUpdateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}/sources/{source_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static corporaSourcesDocumentsList<ThrowOnError extends boolean = false>(options: Options<CorporaSourcesDocumentsListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CorporaSourcesDocumentsListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}/sources/{source_id}/documents',
            ...options
        });
    }
    
    public static corporaSourcesDocumentsRetrieve<ThrowOnError extends boolean = false>(options: Options<CorporaSourcesDocumentsRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<CorporaSourcesDocumentsRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}/sources/{source_id}/documents/{document_id}',
            ...options
        });
    }
    
    /**
     * Request a presigned URL for uploading a document.
     */
    public static corporaUploadsCreate<ThrowOnError extends boolean = false>(options: Options<CorporaUploadsCreateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<CorporaUploadsCreateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/corpora/{corpus_id}/uploads',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}

export class DeletedCallsService {
    public static deletedCallsList<ThrowOnError extends boolean = false>(options?: Options<DeletedCallsListData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<DeletedCallsListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/deleted_calls',
            ...options
        });
    }
    
    public static deletedCallsRetrieve<ThrowOnError extends boolean = false>(options: Options<DeletedCallsRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<DeletedCallsRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/deleted_calls/{call_id}',
            ...options
        });
    }
    
}

export class ModelsService {
    public static modelsList<ThrowOnError extends boolean = false>(options?: Options<ModelsListData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ModelsListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/models',
            ...options
        });
    }
    
}

export class SchemaService {
    /**
     * OpenApi3 schema for this API. Format can be selected via content negotiation.
     *
     * - YAML: application/vnd.oai.openapi
     * - JSON: application/vnd.oai.openapi+json
     */
    public static schemaRetrieve<ThrowOnError extends boolean = false>(options?: Options<SchemaRetrieveData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<SchemaRetrieveResponse, unknown, ThrowOnError>({
            responseType: 'blob',
            url: '/api/schema/',
            ...options
        });
    }
    
}

export class ToolsService {
    /**
     * List all tools in your account.
     */
    public static toolsList<ThrowOnError extends boolean = false>(options?: Options<ToolsListData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<ToolsListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/tools',
            ...options
        });
    }
    
    public static toolsCreate<ThrowOnError extends boolean = false>(options?: Options<ToolsCreateData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<ToolsCreateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/tools',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static toolsDestroy<ThrowOnError extends boolean = false>(options: Options<ToolsDestroyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<ToolsDestroyResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/tools/{tool_id}',
            ...options
        });
    }
    
    public static toolsRetrieve<ThrowOnError extends boolean = false>(options: Options<ToolsRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<ToolsRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/tools/{tool_id}',
            ...options
        });
    }
    
    public static toolsUpdate<ThrowOnError extends boolean = false>(options: Options<ToolsUpdateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<ToolsUpdateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/tools/{tool_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static toolsHistoryList<ThrowOnError extends boolean = false>(options: Options<ToolsHistoryListData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<ToolsHistoryListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/tools/{tool_id}/history',
            ...options
        });
    }
    
    /**
     * Test a tool by executing it with the provided parameters.
     */
    public static toolsTestCreate<ThrowOnError extends boolean = false>(options: Options<ToolsTestCreateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/tools/{tool_id}/test',
            ...options
        });
    }
    
}

export class VoicesService {
    /**
     * List all voices in your account.
     */
    public static voicesList<ThrowOnError extends boolean = false>(options?: Options<VoicesListData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<VoicesListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/voices',
            ...options
        });
    }
    
    /**
     * Create a new cloned voice from an audio sample. The created voice will be private to your account.
     */
    public static voicesCreate<ThrowOnError extends boolean = false>(options?: Options<VoicesCreateData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<VoicesCreateResponse, unknown, ThrowOnError>({
            ...formDataBodySerializer,
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/voices',
            ...options,
            headers: {
                'Content-Type': null,
                ...options?.headers
            }
        });
    }
    
    public static voicesDestroy<ThrowOnError extends boolean = false>(options: Options<VoicesDestroyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<VoicesDestroyResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/voices/{voice_id}',
            ...options
        });
    }
    
    public static voicesRetrieve<ThrowOnError extends boolean = false>(options: Options<VoicesRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<VoicesRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/voices/{voice_id}',
            ...options
        });
    }
    
}

export class WebhooksService {
    public static webhooksList<ThrowOnError extends boolean = false>(options?: Options<WebhooksListData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<WebhooksListResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/webhooks',
            ...options
        });
    }
    
    public static webhooksCreate<ThrowOnError extends boolean = false>(options: Options<WebhooksCreateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<WebhooksCreateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/webhooks',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static webhooksDestroy<ThrowOnError extends boolean = false>(options: Options<WebhooksDestroyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<WebhooksDestroyResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/webhooks/{webhook_id}',
            ...options
        });
    }
    
    public static webhooksRetrieve<ThrowOnError extends boolean = false>(options: Options<WebhooksRetrieveData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<WebhooksRetrieveResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/webhooks/{webhook_id}',
            ...options
        });
    }
    
    public static webhooksPartialUpdate<ThrowOnError extends boolean = false>(options: Options<WebhooksPartialUpdateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).patch<WebhooksPartialUpdateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/webhooks/{webhook_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static webhooksUpdate<ThrowOnError extends boolean = false>(options: Options<WebhooksUpdateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<WebhooksUpdateResponse, unknown, ThrowOnError>({
            security: [
                {
                    name: 'X-API-Key',
                    type: 'apiKey'
                }
            ],
            url: '/api/webhooks/{webhook_id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}